name: Deploy Lambda Functions

on:
  push:
    branches:
      - main
    paths:
      - 'assets/src/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: AWS_ACCESS_KEYS

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Root Dependencies
        run: |
          npm install
          npm install --save-dev @types/aws-lambda@8.10.147

      - name: Install Assets Dependencies
        working-directory: ./assets
        run: |
          npm install
          npm install --save-dev @types/aws-lambda@8.10.147

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-duration-seconds: 1200
          audience: sts.amazonaws.com

      - name: Build Lambda Functions
        run: npm run build:lambda

      - name: Deploy Lambda Functions
        run: |
          # Get list of existing Lambda functions
          EXISTING_FUNCTIONS=$(aws lambda list-functions --query 'Functions[].FunctionName' --output json | jq -r '.[]')
          echo "Found AWS Lambda functions:"
          echo "$EXISTING_FUNCTIONS"

          # Get list of local function directories
          LOCAL_FUNCTIONS=$(find assets/dist -maxdepth 1 -mindepth 1 -type d -exec basename {} \;)
          echo "Found local function directories:"
          echo "$LOCAL_FUNCTIONS"

          # Find matching functions
          MATCHING_FUNCTIONS=$(comm -12 <(echo "$EXISTING_FUNCTIONS" | sort) <(echo "$LOCAL_FUNCTIONS" | sort))
          echo "Matching functions to deploy:"
          echo "$MATCHING_FUNCTIONS"

          # Deploy only matching functions
          echo "$MATCHING_FUNCTIONS" | while read func_name; do
            if [ ! -z "$func_name" ]; then
              echo "Deploying $func_name..."

              tmp_dir=$(mktemp -d)
              cp -r "assets/dist/$func_name/"* "$tmp_dir/"

              cd assets
              cp -r node_modules "$tmp_dir/"
              cd ..

              cd "$tmp_dir"
              zip -q -r ../function.zip .
              cd ..

              aws lambda update-function-code \
                --function-name "$func_name" \
                --zip-file fileb://function.zip \
                --publish \
                --no-cli-pager

              rm -rf "$tmp_dir"
              rm function.zip

              echo "Successfully deployed $func_name"
            fi
          done
